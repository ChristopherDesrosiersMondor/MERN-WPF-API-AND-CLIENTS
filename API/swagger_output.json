{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Fake imdb api",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:1312",
  "basePath": "/",
  "tags": [
    {
      "name": "Film",
      "description": "Endpoints"
    },
    {
      "name": "Serie",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/films/": {
      "get": {
        "tags": [
          "Film"
        ],
        "description": "Endpoint to get all films",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Film"
        ],
        "description": "Endpoint to add a new film",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Adding new film.",
            "schema": {
              "$ref": "#/definitions/Film"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/films/{id}": {
      "get": {
        "tags": [
          "Film"
        ],
        "description": "Endpoint to get film by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Getting a film by id",
            "schema": {
              "$ref": "#/definitions/Film"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Film"
        ],
        "description": "Endpoint to patch a film",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Getting confirmation of updated film",
            "schema": {
              "$ref": "#/definitions/Film"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Film"
        ],
        "description": "Endpoint to delete a film by its id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/series/": {
      "get": {
        "tags": [
          "Serie"
        ],
        "description": "Endpoint to get all series",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Serie"
        ],
        "description": "Endpoint to add new serie.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Adding new serie",
            "schema": {
              "$ref": "#/definitions/Serie"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/series/{id}": {
      "get": {
        "tags": [
          "Serie"
        ],
        "description": "Endpoint to get serie by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Getting serie by id.",
            "schema": {
              "$ref": "#/definitions/Serie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Serie"
        ],
        "description": "Endpoint to patch a serie",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Patching serie.",
            "schema": {
              "$ref": "#/definitions/Serie"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Serie"
        ],
        "description": "Endpoint delete serie by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Film": {
      "type": "object",
      "properties": {
        "titre": {
          "type": "string",
          "example": "Ice Age: Dawn of the dinosaurs"
        },
        "synopsis": {
          "type": "string",
          "example": "Ellie is pregnant, making Manny excited and overprotective. However, this causes him to become distant and negligent of Diego, who debates whether he should leave the herd because he thinks that he's losing his edge as a hunter and isn't meant for the family life, and Sid, who begins to wish for a family of his own and adopts three apparently lost eggs that he finds in a cave. Manny tells Sid to put the eggs back, but Sid ignores him and looks after them, which hatch into baby Tyrannosaurus rex the next morning. "
        },
        "annee": {
          "type": "string",
          "example": "2009"
        },
        "duree": {
          "type": "string",
          "example": "94"
        },
        "posterImage": {
          "type": "string",
          "example": "https://lumiere-a.akamaihd.net/v1/images/p_iceagedawnofthedinosaurs_21384_b145ad3f.jpeg"
        }
      }
    },
    "Serie": {
      "type": "object",
      "properties": {
        "titre": {
          "type": "string",
          "example": "The Magicians"
        },
        "synopsis": {
          "type": "string",
          "example": "Quentin Coldwater enrolls at Brakebills University for Magical Pedagogy to be trained as a magician, where he discovers that the magical world from his favorite childhood book is real and poses a danger to humanity. Meanwhile, the life of his childhood friend Julia is derailed when she is denied entry, and she searches for magic elsewhere outside of the school. "
        },
        "annee": {
          "type": "string",
          "example": "2015-2020"
        },
        "duree": {
          "type": "string",
          "example": "41-52"
        },
        "posterImage": {
          "type": "string",
          "example": "https://images.justwatch.com/poster/38148297/s718/the-magicians.%7Bformat%7D"
        },
        "productionStatus": {
          "type": "string",
          "example": "Ended"
        },
        "nombreSaisons": {
          "type": "string",
          "example": "5"
        }
      }
    }
  }
}